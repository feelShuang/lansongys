//
//  ProfileController.m
//  BeiYi
//
//  Created by Joe on 15/4/13.
//  Copyright (c) 2015年 Joe. All rights reserved.
//
#define HeadIconPath [[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject] stringByAppendingPathComponent:@"headIcon.png"]

#import "ProfileController.h"
#import "Common.h"
#import "LoginController.h"
#import "ChangePwdController.h"
#import "ZZTabBarController.h"
#import "UIButton+WebCache.h"
#import "MyOrderController.h"
#import "ManagePatientController.h"
#import "UpdateAccountController.h"
#import "RegisteOfferController.h"
#import "Avatar.h"
#import "ZZRechargeBtn.h"
#import "BalanceVc.h"
#import "CardVc.h"
#import "PointsVc.h"
#import "SettingVc.h"
#import "ManageDoctorsVc.h"
#import "ZZNewTabBarController.h"
#import "UIBarButtonItem+Item.h"
#import "MyCollectionViewController.h"
#import "WKWebViewController.h"
#import "AboutUSViewController.h"
#import "UMSocial.h"

#import "AccountInfo.h"

@interface ProfileController ()<UIActionSheetDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate>
@property (retain,nonatomic)UIPopoverController *imagePicker;
/** UIButton 头像 */
@property (nonatomic, strong) UIButton *btnAvatar;
// UILabel 请点击头像登陆
@property (nonatomic, strong) UILabel *btnLabel;
/** ZZRechargeBtn 余额 */
@property (nonatomic, strong) ZZRechargeBtn *balanceBtn;

@property (nonatomic, strong) ZZTabBarController *tabBarVC;

@end

@implementation ProfileController



- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    // 创建tableViewFootView
    self.tableView.tableFooterView = [self footViewCreated];
    
    // 每次进入都去获取账号信息，防止出现多端登陆被下线
    [AccountInfo getAccount];

    if (myAccount) {// 判断是否为登陆状态
        
        // 刷新头像
        // 判断头像是否有本地缓存
        BOOL isEXist = [[NSFileManager defaultManager] fileExistsAtPath:HeadIconPath];
        if (isEXist) {// 设置本地头像
            UIImage *headImage = [[UIImage alloc] initWithData:[NSData dataWithContentsOfFile:HeadIconPath]];
            [self.btnAvatar setImage:headImage forState:UIControlStateNormal];
            
        }else {// 没有本地缓存
            // 判断头像单例是否为空
            ZZLog(@"---判断头像单例是否为空---%@",[Avatar sharedInstance].avator);
            
            if (![[Avatar sharedInstance].avator isEqual:[NSNull null]]) {// 不为空
                
                // 先从网络读取图片再缓存头像到本地
                [self.btnAvatar sd_setImageWithURL:[NSURL URLWithString:[Avatar sharedInstance].avator] forState:UIControlStateNormal placeholderImage:[UIImage imageNamed:@"profile00"] completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                    NSData *headIconData = UIImageJPEGRepresentation(image, 0.4);
                    [headIconData writeToFile:HeadIconPath atomically:YES];
                }];
            }else {// 单例为空
                // 需要读取账号信息，得到单例,再根据单例获取头像
                [AccountInfo getAccount];
//                [self getAccount];
                
                // 如果单例不为空
                if (![[Avatar sharedInstance].avator isEqual:[NSNull null]]) {
                    [self.btnAvatar sd_setImageWithURL:[NSURL URLWithString:[Avatar sharedInstance].avator] forState:UIControlStateNormal placeholderImage:[UIImage imageNamed:@"profile00"] completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                        NSData *headIconData = UIImageJPEGRepresentation(image, 0.4);
                        [headIconData writeToFile:HeadIconPath atomically:YES];
                    }];
                    
                // 如果单例还是为空
                }else {
                    [self.btnAvatar setImage:[UIImage imageNamed:@"profile00"] forState:UIControlStateNormal];
                }

            }
        }
        self.btnLabel.text = myAccount.mobile;
    }
    else {
        [self.btnAvatar setImage:[UIImage imageNamed:@"profile00"] forState:UIControlStateNormal];
        self.btnLabel.text = @"请点击头像登陆";
    }
    
}

- (instancetype)initWithStyle:(UITableViewStyle)style {
    if (self = [super initWithStyle:UITableViewStyleGrouped]) {
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = ZZBackgroundColor;
    self.title = @"个人";
    [self setUpUI];
    
    
}

#pragma mark - UI布局
- (void)setUpUI {
    self.tableView.showsVerticalScrollIndicator = NO;
    self.tableView.tableHeaderView = [self headerViewCreated]; // 添加headerView
    self.tableView.contentInset = UIEdgeInsetsMake(-SCREEN_HEIGHT/2*0.3, 0, 0, 0);
    
    
    UIButton *rightbtn = [UIButton buttonWithType:UIButtonTypeCustom];
    rightbtn.frame = CGRectMake(0, 0, 40, 40);
    [rightbtn setImage:[UIImage imageNamed:@"person_set_imag"] forState:UIControlStateNormal];
    [rightbtn addTarget:self action:@selector(rightBarButtonItemAction) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:rightbtn];

    
}

#pragma mark - 导航条设置item
- (void)rightBarButtonItemAction {
    
    if (myAccount) {
        
        // 推出pickerView
        [self.navigationController pushViewController:[[SettingVc alloc] init] animated:YES];
    }
    else {
        
        // 隐藏遮盖
        [MBProgressHUD showError:@"请登录"];
        [NSTimer timerWithTimeInterval:1 target:self selector:@selector(dismissMBProgressHUD) userInfo:nil repeats:NO];
    }

}

- (void)dismissMBProgressHUD {
    
    [MBProgressHUD hideHUD];
}

#pragma mark - 返回tableView的headerView
- (UIView *)headerViewCreated {
    UIImageView *headerView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT/2)];
    headerView.image = [UIImage imageNamed:@"personBg"];
    headerView.userInteractionEnabled = YES;

    
    // 1.设置头像按钮
    self.btnAvatar = [UIButton buttonWithType:UIButtonTypeCustom];
    [self.btnAvatar addTarget:self action:@selector(changeAvatar) forControlEvents:UIControlEventTouchUpInside];
    CGFloat r = headerView.frame.size.height*0.2;// 圆的直径
    CGFloat x = (headerView.frame.size.width - r)/2;
    CGFloat y = headerView.frame.size.height*0.4;
    self.btnAvatar.frame = CGRectMake(x, y, r, r);
//    _btnAvatar.backgroundColor = [UIColor redColor];
    // 1.1 裁剪头像为圆形
    self.btnAvatar.layer.cornerRadius = r/2;
    _btnAvatar.layer.masksToBounds = YES;
    
    [headerView addSubview:_btnAvatar];

    // 2.设置昵称
    UILabel *lblName = [[UILabel alloc] init];
    lblName.frame = CGRectMake(0, CGRectGetMaxY(_btnAvatar.frame)+10, headerView.frame.size.width, 20);
    lblName.textAlignment = NSTextAlignmentCenter;
    lblName.font = [UIFont systemFontOfSize:18];
    if (myAccount) {
        lblName.text = myAccount.mobile;// 显示昵称
    }
    else {
        lblName.text = @"请点击头像登陆";
    }
    lblName.textColor = [UIColor whiteColor];
    self.btnLabel = lblName;
    [headerView addSubview:self.btnLabel];
    
    // 3.余额按钮
    CGFloat buttonW = SCREEN_WIDTH /3;
    CGFloat buttonH = r;
    CGFloat buttonY = headerView.frame.size.height - buttonH;
    
    ZZRechargeBtn *balanceBtn = [[ZZRechargeBtn alloc] initWithTitle:@"我的余额" imageName:@"person_one" target:self action:@selector(balance)];
    balanceBtn.frame = CGRectMake(0, buttonY, buttonW, buttonH);
    [headerView addSubview:balanceBtn];
    self.balanceBtn = balanceBtn;
    
    
    // 4.充值按钮
    ZZRechargeBtn *rechargeBtn = [[ZZRechargeBtn alloc] initWithTitle:@"我的卡券"imageName:@"person_two" target:self action:@selector(recharge)];
    rechargeBtn.frame = CGRectMake(buttonW, buttonY, buttonW, buttonH);
    [headerView addSubview:rechargeBtn];
    
    // 5.积分按钮
    ZZRechargeBtn *withdrawBtn = [[ZZRechargeBtn alloc] initWithTitle:@"我的积分"imageName:@"person_there" target:self action:@selector(withdraw)];
    withdrawBtn.frame = CGRectMake(buttonW *2, buttonY, buttonW, buttonH);
    [headerView addSubview:withdrawBtn];
    
    // 6.分割线
    [ZZUITool lineVerticalWithPosition:CGPointMake(buttonW -1, 0) height:buttonH backGroundColor:[UIColor lightGrayColor] superView:balanceBtn];
    
    [ZZUITool lineVerticalWithPosition:CGPointMake(buttonW -1, 0) height:buttonH backGroundColor:[UIColor lightGrayColor] superView:rechargeBtn];
    
    return headerView;
}

#pragma mark - 更改头像
- (void)changeAvatar {
    if (myAccount) {
        
        //一个菜单列表 选择照相机还是 相册
        UIActionSheet  *sheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:nil otherButtonTitles:@"拍照",@"从相册中选择", nil];
        [sheet showInView:[self.view window]];
    }
    else {
        [self.navigationController pushViewController:[LoginController new] animated:YES];
    }
}

#pragma mark 我的余额
- (void)balance {
    if (myAccount) {
        [self.navigationController pushViewController:[[BalanceVc alloc]init] animated:YES];
    }
    else {
        [MBProgressHUD showError:@"请登录" toView:self.view];
    }
}

#pragma mark 我的卡券
- (void)recharge {
    if (myAccount) {
        [self.navigationController pushViewController:[[CardVc alloc]init] animated:YES];
    }
    else {
        [MBProgressHUD showError:@"请登录" toView:self.view];
    }
}

#pragma mark 我的积分
- (void)withdraw {
    if (myAccount) {
        [self.navigationController pushViewController:[[PointsVc alloc]init] animated:YES];
    }
    else {
        [MBProgressHUD showError:@"请登录" toView:self.view];
    }
}

#pragma mark - UIActionSheetDelegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex {
    if (buttonIndex == 0) {//第一个按钮
        //照相机
        [self addOfCamera];
    }
    else if(buttonIndex == 1)//第二个按钮
    {
        //相册
        [self addOfAlbum];
    }
}

#pragma mark - 调用照相机
- (void) addOfCamera {
    UIImagePickerController *ipc = [[UIImagePickerController alloc] init];
    ipc .delegate = self;
    ipc.sourceType = UIImagePickerControllerSourceTypeCamera;
    [self presentViewController:ipc animated:YES completion:nil];
}

#pragma mark - 调用相册
- (void) addOfAlbum {
    UIImagePickerController *ipc = [[UIImagePickerController alloc] init];
    ipc.delegate = self;
    ipc.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
    [self presentViewController:ipc animated:YES completion:nil];
}

#pragma mark Camera View Delegate
- (void)imagePickerController:(UIImagePickerController *)picker
didFinishPickingMediaWithInfo:(NSDictionary *)info {
    ZZLog(@"--调用相册/机--%@",info);

    [picker dismissViewControllerAnimated:YES completion:nil];
    
    UIImage *headIcon = info[@"UIImagePickerControllerOriginalImage"];// 头像图片
    
    // 1.修改本地头像
    // 1.1设置本地头像
    [self.btnAvatar setImage:headIcon forState:UIControlStateNormal];
    
    // 1.2缓存图片到本地
    NSData *headIconData = UIImageJPEGRepresentation(headIcon, 0.4);
    [headIconData writeToFile:HeadIconPath atomically:YES];
    

    // 2.修改服务器头像
    // 2.1准备参数
    NSString *urlStr = [NSString stringWithFormat:@"%@/uc/my/update_avator",BASEURL] ;
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    [params setObject:myAccount.token forKey:@"token"];
    
    // 2.2头像数据(BASE64加密后的数据)
    NSData *imgData = UIImageJPEGRepresentation(info[@"UIImagePickerControllerOriginalImage"], 0.4);
    NSString *imgStr = [imgData base64Encoding];
    
    [params setObject:imgStr forKey:@"avator_str"];
    [params setObject:@".jpg" forKey:@"suffix"];// 图片后缀名
    
    [ZZHTTPTool post:urlStr params:params success:^(NSDictionary *responseDict) {
        ZZLog(@"%@",responseDict);
        
        if ([responseDict[@"code"] isEqualToString:@"0000"]) {// 修改成功
            // 1.显示提示信息
            [MBProgressHUD showSuccess:@"头像修改成功"];
            // 2.缓存头像地址到单例地址
            [Avatar sharedInstance].avator = responseDict[@"result"];
            
        } else {
            [MBProgressHUD showError:@"头像修改失败"];
        }
        
    } failure:^(NSError *error) {
        // 隐藏遮盖
        [MBProgressHUD hideHUD];
        ZZLog(@"%@",error);
    }];
    
    // 获取账号信息
    [AccountInfo getAccount];
//    [self getAccount];
}

//点击cancel调用的方法
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {
    [picker dismissViewControllerAnimated:YES completion:^{
        
    }];
}


#pragma mark - 监听登陆按钮点击
- (void)login {
    LoginController *loginVc = [[LoginController alloc] init];
    [self.navigationController pushViewController:loginVc animated:YES];
}

#pragma mark 删除账号信息
- (void)deleteAccountInfo {
    // 0.删除本地头像图片，防止多账号冲突
    [[NSFileManager defaultManager] removeItemAtPath:HeadIconPath error:nil];
    
    // 1.移除账号存储信息
    [ZZAccountTool deleteAccount];
    
    // 2.显示遮盖
    [MBProgressHUD showSuccess:@"请重新登陆！"];
    
    // 3.返回首页
}

#pragma mark - Table view data source
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    return ROLESTYLE?3:5;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *ID = @"cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:ID];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:ID];
    }
    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    
    cell.textLabel.font = [UIFont systemFontOfSize:16];
    if (indexPath.section == 0) {
        
        if (ROLESTYLE) {
            switch (indexPath.row) {
                case 0:{
                    cell.imageView.image = [UIImage imageNamed:@"profile10"];
                    
                    NSString *lblText = @"提供者医院";
                    cell.textLabel.text = lblText;
                    break;
                }
                case 1: {
                    cell.imageView.image = [UIImage imageNamed:@"profile07"];
                    cell.textLabel.text = @"我的分享";
                    break;
                }
                case 2: {
                    cell.imageView.image = [UIImage imageNamed:@"profile12"];
                    cell.textLabel.text = @"意见反馈";
                }
            }
            
        }
        else {
            
            switch (indexPath.row) {
                case 0:{
                    cell.imageView.image = [UIImage imageNamed:@"profile04"];
                    
                    NSString *lblText = @"我的就诊人";
                    cell.textLabel.text = lblText;
                    break;
                }
                case 1:
                    cell.imageView.image = [UIImage imageNamed:@"profile05"];
                    cell.textLabel.text = @"意见反馈";
                    break;
                case 2:
                    cell.imageView.image = [UIImage imageNamed:@"profile12"];
                    cell.textLabel.text = @"常见问题";
                    break;
                case 3:
                    cell.imageView.image = [UIImage imageNamed:@"profile12"];
                    cell.textLabel.text = @"服务协议";
                    break;
                case 4:
                    cell.imageView.image = [UIImage imageNamed:@"profile05"];
                    cell.textLabel.text = @"关于我们";
                    break;
            }
            
        }
        
    }

    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    WKWebViewController *wkWebViewVC = [WKWebViewController new];
    
    if (indexPath.section == 0) {
        if (indexPath.row == 0) {
            if (myAccount) {
                if (ROLESTYLE) {// 我是提供者
                    if (myAccount) {
                        RegisteOfferController *reOfferVc = [[RegisteOfferController alloc] init];
                        [self.navigationController pushViewController:reOfferVc animated:YES];
                    } else {
                        [MBProgressHUD showError:@"请登录" toView:self.view];
                    }
                }else {
                    // 我的就诊人
                    ManagePatientController *manageVc = [[ManagePatientController alloc] init];
                    [self.navigationController pushViewController:manageVc animated:YES];
                }
            }
            else {
                [MBProgressHUD showError:@"请登录" toView:self.view];
            }

        }else if (indexPath.row == 1) {
            
            if (ROLESTYLE) { // 提供者
                
                // 隐藏没有安装的客户端
//                [UMSocialConfig hiddenNotInstallPlatforms:@[UMShareToQQ, UMShareToQzone, UMShareToWechatSession, UMShareToWechatTimeline]];
                
                // 我的分享
                [UMSocialSnsService presentSnsIconSheetView:self
                                                     appKey:@"56deb10b67e58e036b001222"
                                                  shareText:@"贝医-让您的需求更简单"
                                                 shareImage:[UIImage imageNamed:@"comment_clicked"]
                                            shareToSnsNames:[NSArray arrayWithObjects:UMShareToSina,UMShareToTencent,UMShareToWechatSession,UMShareToWechatTimeline,UMShareToQzone,UMShareToQQ,nil]
                                                   delegate:nil];
                
            } else {
                // 意见反馈
                
            }
           
        }else if (indexPath.row == 2){// 我的分享
            
            if (ROLESTYLE) { // 提供者
                // 意见反馈
                
            }
            else { // 普通用户
                ZZLog(@"---常见问题---");
                wkWebViewVC.num = 2;
                wkWebViewVC.title = @"常见问题";
                [self.navigationController pushViewController:wkWebViewVC animated:YES];
            }
        }else if (indexPath.row == 3) {
            ZZLog(@"---服务协议---");
            wkWebViewVC.num = 3;
            wkWebViewVC.title = @"服务协议";
            [self.navigationController pushViewController:wkWebViewVC animated:YES];
        }else {
            ZZLog(@"---关于我们---");
            wkWebViewVC.num = 4;
            wkWebViewVC.title = @"关于我们";
            AboutUSViewController *aboutUs = [AboutUSViewController new];
            [self.navigationController pushViewController:aboutUs animated:YES];
        }
    }else {
        if (indexPath.row==0) {// 设置
            [self.navigationController pushViewController:[[SettingVc alloc] init] animated:YES];
            
        }
        
    }
}

- (void)showAlert {
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"即将开放" message:nil delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
    [alert show];
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 20;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    if (section == 2) {
        return 20;
    }else
        return 5;
}

#pragma mark - 创建tableViewFootView
- (UIView *)footViewCreated {
    UIView *footView = [[UIView alloc] initWithFrame:CGRectMake(0, CGRectGetMaxY(self.tableView.frame) +ZZMarins, SCREEN_WIDTH, 40+ZZMarins)];
    [self.view addSubview:footView];
    UIButton *btnConfirm = [UIButton buttonWithType:UIButtonTypeCustom];
    CGFloat x = ZZMarins;
    CGFloat w = (SCREEN_WIDTH - 2*ZZMarins);
    btnConfirm.frame = CGRectMake(x, ZZMarins, w, 40);
    btnConfirm.backgroundColor = ZZColor(91, 160, 230, 1);
    btnConfirm.layer.cornerRadius = 3.0f;
    btnConfirm.titleLabel.font = [UIFont systemFontOfSize:15];
    [btnConfirm setTitle:ROLESTYLE?@"普通模式":@"经纪人模式" forState:UIControlStateNormal];
    [btnConfirm setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [btnConfirm addTarget:self action:@selector(btnClicked) forControlEvents:UIControlEventTouchUpInside];
    [footView addSubview:btnConfirm];
    return footView;
}

- (void)btnClicked {
    
    BOOL roleStyle = !ROLESTYLE;
    [[NSUserDefaults standardUserDefaults] setBool:roleStyle forKey:@"RoleStyle"];
    
    if (roleStyle) {// 切换经纪人模式
        if (myAccount) {
            
            ZZNewTabBarController *newTabController = [[ZZNewTabBarController alloc] init];
            [UIApplication sharedApplication].keyWindow.rootViewController = newTabController;
        }
        else {
            [MBProgressHUD showError:@"请登录" toView:self.view];
            roleStyle = !ROLESTYLE;
            [[NSUserDefaults standardUserDefaults] setBool:roleStyle forKey:@"RoleStyle"];
        }
        
    }else {
        // 切换普通模式
        ZZTabBarController *tabController = [[ZZTabBarController alloc] init];
        [UIApplication sharedApplication].keyWindow.rootViewController = tabController;
    }
    
}

//#pragma mark - 读取账号信息
- (void)getAccount {
    if (myAccount) {
        // 1.准备参数
        NSString *urlStr = [NSString stringWithFormat:@"%@/uc/my",BASEURL] ;
        NSMutableDictionary *params = [NSMutableDictionary dictionary];
        [params setObject:myAccount.token forKey:@"token"];
        
        [ZZHTTPTool post:urlStr params:params success:^(NSDictionary *responseDict) {
            ZZLog(@"%@",responseDict);
            if ([responseDict[@"code"] isEqual:@"0000"]) {
                
                // 把头像地址保存到单例
                [Avatar sharedInstance].avator = responseDict[@"result"][@"avator"];
                
            }else {
                // 读取账号信息失败 删除账号信息
                [self deleteAccountInfo];
            }
            
        } failure:^(NSError *error) {
            ZZLog(@"%@",error);
        }];
    }
}

@end
