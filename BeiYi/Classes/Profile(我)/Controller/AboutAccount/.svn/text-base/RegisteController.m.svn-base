//
//  RegisteController.m
//  BeiYi
//
//  Created by Joe on 15/4/21.
//  Copyright (c) 2015年 Joe. All rights reserved.
//

#import "RegisteController.h"
#import "Common.h"
#import "ResourcesController.h"
#import "ZZHttpTool.h"
#import "MBProgressHUD+MJ.h"
#import "Md5Coder.h"
#import "JKCountDownButton.h"

@interface RegisteController ()<UITextFieldDelegate,TagsDelegate>
/** UITextField 昵称 */
@property (nonatomic, strong) UITextField *textName;
/** UITextField 手机号 */
@property (nonatomic, strong) UITextField *textPhone;
/** UITextField 密码 */
@property (nonatomic, strong) UITextField *textNewCode;
/** UITextField 密码确认 */
@property (nonatomic, strong) UITextField *textRepeat;
/** UITextField 验证码 */
@property (nonatomic, strong) UITextField *textIDCode;
/** UIButton 获取验证码按钮 */
@property (nonatomic, strong) JKCountDownButton *btnGetCode;
/** UIButton 注册按钮 */
@property (nonatomic, strong) UIButton *btnRegist;
/** UIView 手机号码下面的分割线 */
@property (nonatomic, strong) UIView *phoneLine;

@end

@implementation RegisteController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"注册";
    self.view.backgroundColor = ZZBackgroundColor;
    
    // 设置UI界面
    [self setUpUI];
}

#pragma mark - 设置UI界面
- (void)setUpUI {
    CGFloat backViewY = 64;
    CGFloat backViewW = SCREEN_WIDTH;
    CGFloat backViewH = SCREEN_HEIGHT/15;
    
    // 0.背景View
    UIView *backView = [[UIView alloc] initWithFrame:CGRectMake(0, backViewY, backViewW, backViewH *5)];
    backView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:backView];
    
    CGFloat lblX = ZZMarins/2;
    CGFloat lblY = ZZMarins/1.5;
    CGFloat lblWidth = ZZMarins * 4;
    CGFloat lblHeight = backViewH-2*lblY;
    
    // textField的X值
    CGFloat txFieldX = lblWidth +2*lblX;
    // textField的W值
    CGFloat txFieldW = backViewW -txFieldX -ZZMarins;
    
    // 1.1 昵称label
    UILabel *lblName = [[UILabel alloc] initWithFrame:CGRectMake(lblX, lblY, lblWidth, lblHeight)];
    lblName.text = @"昵  称";
    lblName.textColor = ZZColor(51, 51, 51, 1);
    lblName.font = [UIFont systemFontOfSize:15];
    [backView addSubview:lblName];
    
    // 1.2 昵称textField
    _textName = [[UITextField alloc] initWithFrame:CGRectMake(txFieldX, lblY, txFieldW, lblHeight)];
    _textName.placeholder = @"请输入您的昵称";
    _textName.textAlignment = NSTextAlignmentRight;
    _textName.keyboardType = UIKeyboardTypeDefault;
    _textName.delegate = self;
    _textName.clearButtonMode = UITextFieldViewModeWhileEditing;
    _textName.font = [UIFont systemFontOfSize:15];
    [backView addSubview:_textName];
    
    // 2.1 手机号label
    UILabel *lblPhone = [[UILabel alloc] initWithFrame:CGRectMake(lblX, backViewH +lblY, lblWidth, lblHeight)];
    lblPhone.text = @"手机号";
    lblPhone.textColor = ZZColor(51, 51, 51, 1);
    lblPhone.font = [UIFont systemFontOfSize:15];
    [backView addSubview:lblPhone];
    
    // 2.2 手机号textField
    _textPhone = [[UITextField alloc] initWithFrame:CGRectMake(txFieldX , backViewH +lblY, txFieldW, lblHeight)];
    _textPhone.placeholder = @"请输入手机号";
    _textPhone.textAlignment = NSTextAlignmentRight;
    _textPhone.keyboardType = UIKeyboardTypeNumberPad;
    _textPhone.delegate = self;
    _textPhone.clearButtonMode = UITextFieldViewModeWhileEditing;
    _textPhone.font = [UIFont systemFontOfSize:15];
    [backView addSubview:_textPhone];
    
    // 通知监听是否正在编辑电话号码
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(changeLineColor) name:UITextFieldTextDidBeginEditingNotification object:self.textPhone];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(changeLineColorBack) name:UITextFieldTextDidEndEditingNotification object:self.textPhone];
    
    // 3.1 密码label
    UILabel *lblNewCode = [[UILabel alloc] initWithFrame:CGRectMake(lblX, 2*backViewH +lblY, lblWidth, lblHeight)];
    lblNewCode.text = @"密  码";
    lblNewCode.textColor = ZZColor(51, 51, 51, 1);
    lblNewCode.font = [UIFont systemFontOfSize:15];
    [backView addSubview:lblNewCode];
    
    // 3.2 密码textField
    _textNewCode = [[UITextField alloc] initWithFrame:CGRectMake(txFieldX , 2*backViewH +lblY, txFieldW, lblHeight)];
    _textNewCode.placeholder = @"请输入密码";
    _textNewCode.textAlignment = NSTextAlignmentRight;
    _textNewCode.clearButtonMode = UITextFieldViewModeWhileEditing;
    _textNewCode.clearsOnBeginEditing = YES;
    _textNewCode.keyboardType = UIKeyboardTypeEmailAddress;
    _textNewCode.secureTextEntry = YES;
    _textNewCode.font = [UIFont systemFontOfSize:15];
    [backView addSubview:_textNewCode];
    
    // 4.1 密码确认label
    UILabel *lblRepeat = [[UILabel alloc] initWithFrame:CGRectMake(lblX, 3*backViewH +lblY, lblWidth +ZZMarins, lblHeight)];
    lblRepeat.text = @"密码确认";
    lblRepeat.textColor = ZZColor(51, 51, 51, 1);
    lblRepeat.font = [UIFont systemFontOfSize:15];
    [backView addSubview:lblRepeat];
    
    // 4.2 密码确认textField
    _textRepeat = [[UITextField alloc] initWithFrame:CGRectMake(txFieldX +ZZMarins , 3*backViewH +lblY, txFieldW -ZZMarins, lblHeight)];
    _textRepeat.placeholder = @"请再次输入密码";
    _textRepeat.textAlignment = NSTextAlignmentRight;
    _textRepeat.clearButtonMode = UITextFieldViewModeWhileEditing;
    _textRepeat.clearsOnBeginEditing = YES;
    _textRepeat.keyboardType = UIKeyboardTypeEmailAddress;
    _textRepeat.secureTextEntry = YES;
    _textRepeat.font = [UIFont systemFontOfSize:15];
    [backView addSubview:_textRepeat];
    
    // 5.1 验证码label
    UILabel *lblIDCode = [[UILabel alloc] initWithFrame:CGRectMake(lblX, 4*backViewH +lblY, lblWidth, lblHeight)];
    lblIDCode.text = @"验证码";
    lblIDCode.textColor = ZZColor(51, 51, 51, 1);
    lblIDCode.font = [UIFont systemFontOfSize:15];
    [backView addSubview:lblIDCode];
    
    // 5.2 验证码textField
    _textIDCode = [[UITextField alloc] initWithFrame:CGRectMake(txFieldX , 4*backViewH +lblY, backViewW/3*2 -txFieldX -ZZMarins, lblHeight)];
    _textIDCode.placeholder = @"请输入验证码";
    _textIDCode.font = [UIFont systemFontOfSize:15];
    _textIDCode.textAlignment = NSTextAlignmentRight;
    _textIDCode.clearButtonMode = UITextFieldViewModeWhileEditing;
    _textIDCode.keyboardType = UIKeyboardTypeNumberPad;
    [backView addSubview:_textIDCode];
    
    // 6.获取验证按钮
    self.btnGetCode = [JKCountDownButton buttonWithType:UIButtonTypeCustom];
    CGFloat marinY = 8;
    CGFloat btnGetCodeY = 4*backViewH+marinY;
    CGFloat btnGetCodeH = backViewH -2*marinY;
    
    self.btnGetCode.frame = CGRectMake(CGRectGetMaxX(self.textIDCode.frame) +ZZMarins, btnGetCodeY, backViewW/3 -2*lblX, btnGetCodeH);
    self.btnGetCode.titleLabel.font = [UIFont systemFontOfSize:13];
    [self.btnGetCode setTitle:@"获取验证码" forState:UIControlStateNormal];
    self.btnGetCode.layer.cornerRadius = 3.0f;
    self.btnGetCode.backgroundColor = ZZButtonColor;
    //    [self.btnGetCode setBackgroundImage:[UIImage imageNamed:@"btnGetCode"] forState:UIControlStateNormal];
    // 监听  获取验证码按钮  点击
    [self clickedGetIDCodeButton];
    [backView addSubview:self.btnGetCode];
    
    
    // 7.注册按钮
    self.btnRegist = [UIButton buttonWithType:UIButtonTypeCustom];
    self.btnRegist.frame = CGRectMake(ZZMarins, CGRectGetMaxY(backView.frame) +ZZMarins, SCREEN_WIDTH -2*ZZMarins, ZZBtnHeight);
    self.btnRegist.backgroundColor = ZZButtonColor;
    [self.btnRegist addTarget:self action:@selector(registe) forControlEvents:UIControlEventTouchUpInside];
    self.btnRegist.layer.cornerRadius = 3.0f;
    [self.btnRegist setTitle:@"注  册" forState:UIControlStateNormal];
    [self.view addSubview:self.btnRegist];
    
    // 8.分割线
    [ZZUITool viewWithframe:CGRectMake(txFieldX, backViewH, txFieldW, 0.6) backGroundColor:[UIColor lightGrayColor] superView:backView];
    
    self.phoneLine = [ZZUITool viewWithframe:CGRectMake(txFieldX, backViewH *2, txFieldW, 0.6) backGroundColor:[UIColor lightGrayColor] superView:backView];
    
    [ZZUITool viewWithframe:CGRectMake(txFieldX, backViewH *3, txFieldW, 0.6) backGroundColor:[UIColor lightGrayColor] superView:backView];
    
    [ZZUITool viewWithframe:CGRectMake(txFieldX, backViewH *4, txFieldW, 0.6) backGroundColor:[UIColor lightGrayColor] superView:backView];
}

#pragma mark - 监听  电话号码是否在输入状态
- (void)changeLineColor {// 正在输入电话号码，改变分割线颜色
    self.phoneLine.backgroundColor = ZZBaseColor;
}
- (void)changeLineColorBack {// 停止输入电话号码，分割线改回灰色
    self.phoneLine.backgroundColor = [UIColor lightGrayColor];
}

#pragma mark - 监听  获取验证码按钮  点击
- (void)clickedGetIDCodeButton {
    __weak typeof(self) wSelf = self;
    
    [self.btnGetCode addToucheHandler:^(JKCountDownButton *sender, NSInteger tag) {
        sender = wSelf.btnGetCode;
        
        // 1.退出键盘
        [wSelf.view endEditing:YES];
        
        // 2.确认输入的电话号码正确
        if (wSelf.textPhone.text.length == 0) {
            [MBProgressHUD showError:@"请输入手机号码"];
            return;
        }
        
        if (wSelf.textPhone.text.length != 11) {
            [MBProgressHUD showError:@"请输入正确的手机号码"];
            return;
        }
        
        // 3.监听  获取验证码按钮  点击
        [wSelf getIDCodeRequest];// 在 getIDCodeRequest 方法里执行剩下的关于按钮的操作（倒计时等）
        
    }];
}

#pragma mark - 获取验证码 网络请求
- (void)getIDCodeRequest {
    
    // 1.准备参数
    NSString *urlStr = [NSString stringWithFormat:@"%@/validate_code",BASEURL] ;
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    [params setObject:self.textPhone.text forKey:@"mobile"];
    [params setObject:@"0" forKey:@"exists_flag"];// 手机号是否允许重复1-是 0-否
    
    [MBProgressHUD showMessage:@"验证码获取中..."];

    __weak typeof(self) wSelf = self;

    // 2.发送post请求
    [ZZHTTPTool post:urlStr params:params success:^(NSDictionary *responseDict) {
        ZZLog(@"%@",responseDict);
        if ([responseDict[@"code"] isEqual:@"0001"]) {
            // 隐藏遮盖
            [MBProgressHUD hideHUD];
            [MBProgressHUD showError:responseDict[@"message"]];
        }else {
            // 隐藏遮盖
            [MBProgressHUD hideHUD];
            // 4.按钮不可选中
            wSelf.btnGetCode.enabled = NO;
            
            // 5.开始倒计时
            [wSelf.btnGetCode startWithSecond:60];
            
            // 6.倒计时中
            [wSelf.btnGetCode didChange:^NSString *(JKCountDownButton *countDownButton,int second) {
                NSString *title = [NSString stringWithFormat:@"%d s后重新获取",second];
                countDownButton.backgroundColor = [UIColor lightGrayColor];
                return title;
            }];
            
            // 7.倒计时结束
            [wSelf.btnGetCode didFinished:^NSString *(JKCountDownButton *countDownButton, int second) {
                countDownButton.enabled = YES;
                countDownButton.backgroundColor = ZZBaseColor;
                return @"点击重新获取";
            }];
            
            [MBProgressHUD showSuccess:responseDict[@"message"]];
        }
    } failure:^(NSError *error) {
        // 隐藏遮盖
        [MBProgressHUD hideHUD];
        ZZLog(@"%@",error);
    }];
}

#pragma mark - 监听 注册按钮 点击事件
- (void)registe {
    
    [self.view endEditing:YES];
    
    if (self.textName.text.length ==0) {
        [MBProgressHUD showError:@"请输入用户昵称"];
        return;
    }else if (self.textPhone.text.length ==0) {
        [MBProgressHUD showError:@"请输入您的手机号"];
        return;
    }else if (self.textNewCode.text.length ==0) {
        [MBProgressHUD showError:@"请输入您的密码"];
        return;
    }else if (self.textRepeat.text.length ==0) {
        [MBProgressHUD showError:@"请再次输入您的密码"];
        return;
    }else if(![self.textNewCode.text isEqualToString:self.textRepeat.text]){
        [MBProgressHUD showError:@"两次输入的密码不一致"];
        return;
    }else if(self.textIDCode.text.length ==0){
        [MBProgressHUD showError:@"请输入您的验证码"];
        return;
    }
    
    // 1.准备参数
    NSString *md5Pwd = [Md5Coder md5:self.textNewCode.text];// md5加密后的密码

    NSString *urlStr = [NSString stringWithFormat:@"%@/register",BASEURL];
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
//    [dict setValue:self.textName.text forKey:@"nick_name"];
    [dict setValue:self.textPhone.text forKey:@"mobile"];
    [dict setValue:md5Pwd forKey:@"password"];
    [dict setValue:self.textIDCode.text forKey:@"auth_code"];
    [dict setValue:@0 forKey:@"offer_flag"];// 默认注册成需求者

    // 2.添加遮盖
    [MBProgressHUD showMessage:@"正在发送请求..."];
    
    __weak typeof(self) weakSelf = self;
    
    // 3.发送post请求
    [ZZHTTPTool post:urlStr params:dict success:^(NSDictionary *responseObj) {
        ZZLog(@"---注册成功？---%@",responseObj);
        // 3.1移除遮盖
        [MBProgressHUD hideHUD];
        if ([responseObj[@"message"] isEqualToString:@"验证码输入不正确！"]) {
            [MBProgressHUD showError:@"验证码输入不正确！"];
        }else if ([responseObj[@"message"] isEqualToString:@"注册成功！"]){
            // 3.2跳转到登陆界面
            [MBProgressHUD showSuccess:@"注册成功！"];
            [weakSelf.navigationController popViewControllerAnimated:YES];
        }else {
            [MBProgressHUD showError:responseObj[@"message"]];
        }

    } failure:^(NSError *error) {
        ZZLog(@"%@",error);
    }];
}

#pragma mark -  UITextFieldDelegate(限定号码只能输入11位)
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string;
{
    if ([string isEqualToString:@"\n"])
    {
        return YES;
    }
    NSString * toBeString = [textField.text stringByReplacingCharactersInRange:range withString:string];
    
    if (self.textPhone == textField)
    {
        if ([toBeString length] > 11) {
            textField.text = [toBeString substringToIndex:11];
            return NO;
        }
    }
    return YES;
}

#pragma mark - 退出键盘
- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {
    [self.view endEditing:YES];
}

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

@end
