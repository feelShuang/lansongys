//
//  ManageOrderVc.m
//  BeiYi
//
//  Created by Joe on 15/12/28.
//  Copyright © 2015年 Joe. All rights reserved.
//

#import "ManageOrderVc.h"
#import "Common.h"
#import "MJRefresh.h"
#import "ManageOrderCell.h"
#import "ManageOrder.h"
#import "HumanInfo.h"

@interface ManageOrderVc ()<ManageOrderCellDelegate>

/** NSMutableArray 订单 数组*/
@property (nonatomic, strong) NSMutableArray *orders;

/** NSMutableArray 抢单 数组*/
@property (nonatomic, strong) NSMutableArray *getOrders;

@end

@implementation ManageOrderVc

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    [self addHeaderRefresh];
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.title = @"订单";
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    
    self.tableView.backgroundColor = ZZBackgroundColor;
    [self addFooterRefresh]; // 普通Footer刷新
}

#pragma mark - 普通Header刷新
- (void)addHeaderRefresh {
    __weak typeof(self) weakSelf = self;
    
    self.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        // 1.清除所有数据
        [weakSelf.getOrders removeAllObjects];
        
        // 2.加载网络请求
        [weakSelf loadHeadHttpRequest];
        
        // 3.拿到当前的下拉刷新控件，结束刷新状态
        [weakSelf.tableView.mj_header endRefreshing];
    }];

    // 4.首次进入页面马上进入刷新状态
    [self.tableView.mj_header beginRefreshing];
}

#pragma mark - 普通Footer刷新
- (void)addFooterRefresh {
    __weak typeof(self) weakSelf = self;
    
    self.tableView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        // 1.加载网络请求
        [weakSelf loadFooterHttpRequest];
        
        // 2.拿到当前的上拉刷新控件，结束刷新状态
        [weakSelf.tableView.mj_footer endRefreshing];
    }];

}

#pragma mark - 下拉刷新网络请求
- (void)loadHeadHttpRequest {
    
    NSString *urlStr = [NSString stringWithFormat:@"%@/uc/order/grab_list",BASEURL];
    NSMutableDictionary *paras = [NSMutableDictionary dictionary];
    [paras setObject:myAccount.token forKey:@"token"];
    [paras setObject:@1 forKey:@"pn"];// 页码
    
    __weak typeof(self) wSelf = self;
    
    [ZZHTTPTool post:urlStr params:paras success:^(NSDictionary *responseObj) {
        //        ZZLog(@"抢单-responseObj--%@",responseObj);
        
        NSArray *dataList = responseObj[@"result"][@"dataList"];
        
        if (!dataList.count) {
            // 隐藏遮盖
            [MBProgressHUD hideHUDForView:wSelf.view animated:YES];
            [wSelf.orders removeAllObjects];
            [wSelf.tableView reloadData];
            [MBProgressHUD showError:@"订单已经抢完，请稍后" toView:wSelf.view];
        }else {
            NSMutableArray *tempArr = [NSMutableArray array];
            for (NSDictionary *dict in dataList) {
                ManageOrder *order = [ManageOrder offerOrderWithDict:dict];
                [tempArr addObject:order];
            }
            wSelf.orders = tempArr;
            
            // 隐藏遮盖
            [MBProgressHUD hideHUDForView:wSelf.view animated:YES];
            [wSelf.tableView reloadData];
        }
        
    } failure:^(NSError *error) {
        ZZLog(@"---%@",error);
        
        // 隐藏遮盖
        [MBProgressHUD hideHUDForView:wSelf.view animated:YES];
        [MBProgressHUD showError:@"发生错误，请重试" toView:wSelf.view];
    }];
}

#pragma mark - 上拉加载网络请求
- (void)loadFooterHttpRequest {
    // 1.显示遮盖
    [MBProgressHUD showMessage:@"加载中..." toView:self.view];
    
    // 2.发送网络请求
    // 2.1准备参数
    NSString *urlStr = [NSString stringWithFormat:@"%@/order",BASEURL];
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    [params setObject:myAccount.token forKey:@"token"];// 登录传token
    
    /** 当前页码 */
    NSUInteger currentPage = 0;
    if (self.getOrders.count <10) {// 当首页显示的数量少于10就说明数据已经取光，直接让current的数值超过1
        currentPage = 2;
        
    }else {
        currentPage = self.getOrders.count/10 +1;
        
    }
    
    [params setObject:[NSString stringWithFormat:@"%lu",(unsigned long)currentPage] forKey:@"pn"];// 页码
    
    __weak typeof(self) weakSelf = self;
    
    // 2.2发送post请求
    [ZZHTTPTool post:urlStr params:params success:^(NSDictionary *responseObj) {
        
        NSArray *dataList = responseObj[@"result"][@"dataList"];
        
        if (!dataList.count) {
            // 隐藏遮盖
            [MBProgressHUD hideHUDForView:weakSelf.view animated:YES];
            [MBProgressHUD showError:@"没有更多订单了哦" toView:weakSelf.view];
        }else {
            
            NSMutableArray *tempArr = [NSMutableArray array];
            for (NSDictionary *dict in dataList) {
                ManageOrder *order = [ManageOrder offerOrderWithDict:dict];
                [tempArr addObject:order];
            }
            [weakSelf.getOrders addObjectsFromArray:tempArr];
            
            // 隐藏遮盖
            [MBProgressHUD hideHUDForView:weakSelf.view animated:YES];
            [weakSelf.tableView reloadData];
        }
        
        
    } failure:^(NSError *error) {
        ZZLog(@"---%@",error);
        
        // 隐藏遮盖
        [MBProgressHUD hideHUDForView:weakSelf.view animated:YES];
        [MBProgressHUD showError:@"发生错误，请重试" toView:weakSelf.view];
    }];
}

#pragma mark - TableView Delegate
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
//    return ROLESTYLE?self.getOrders.count:self.orders.count;
    return self.orders.count;

}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    ManageOrderCell *cell = [ManageOrderCell cellWithTableView:tableView];
    
    if (indexPath.row < self.orders.count) {
        cell.order = self.orders[indexPath.row];
    }
    cell.delegate = self;
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 140;
}

#pragma mark - ManageOrderCellDelegate
- (void)manageOrderCell:(ManageOrderCell *)manageOrderCell didClickedDeleteButton:(UIButton *)btn {
    ZZLog(@"----点击了删除按钮，删除了订单----");
}

@end
