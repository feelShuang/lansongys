//
//  DoctorDetail2Vc.m
//  BeiYi
//
//  Created by Joe on 15/8/31.
//  Copyright (c) 2015年 Joe. All rights reserved.
//

#import "DoctorDetail2Vc.h"
#import "Common.h"
#import "DoctorView.h"
#import "OrderInfo.h"
#import "UIImageView+WebCache.h"
#import "ZZActionBtn.h"
#import "SettingDocPriceVc.h"
#import "UILabel+serviceOpen.h"
#import "DoctorInfo.h"
#import "Service.h"
#import "GuaHaoController.h"
#import "OperationTableViewController.h"
#import "ConsultationTableViewController.h"
#import "IllnessAnalyzeTableViewController.h"
#import "LeaveTrackTableViewController.h"
#import "ServicePrice.h"
#import "UIBarButtonItem+Extension.h"
#import "HosDetailViewController.h"

@interface DoctorDetail2Vc ()

@property (nonatomic, strong) UIScrollView *scrollView;

/** UILabel 医生头像 */
@property (strong, nonatomic) UIImageView *iconView;
/** UILabel 医生姓名 */
@property (strong, nonatomic) UILabel *lblName;
/** UILabel 科室名称 */
@property (strong, nonatomic) UILabel *lblDepart;
// 医院按钮
@property (nonatomic, strong) UIButton *hospitalButton;
/** UILabel 介绍 */
@property (strong, nonatomic) UILabel *lblDetail;
/** UIView 背景View */
@property (strong, nonatomic) UIView *bgView;
/** UITextView 医生擅长 */
@property (nonatomic, strong) UITextView *txViewGoodAt;
/** UITextView 医生详情 */
@property (nonatomic, strong) UITextView *txViewDetail;
/** UIView 设置frame用 */
@property (strong, nonatomic) UIView *setFrameView;

/** textView点击重复计数 */
@property (nonatomic, assign) int clickedNum;
@property (nonatomic, assign) int clickedNum2;

/** 医生擅长textView的size */
@property (nonatomic, assign) CGSize size1;
/** 医生介绍textView的size */
@property (nonatomic, assign) CGSize size2;
/** 医生擅长textView的Y */
@property (nonatomic, assign) CGFloat textViewY1;
/** 医生介绍textView的Y */
@property (nonatomic, assign) CGFloat textViewY2;
/** NSString 医生介绍 */
//@property (nonatomic, copy) NSString *doctorDesc;

// 医生模型
@property (nonatomic, strong) DoctorInfo *doctorInfo;


// 预约专家按钮背景
@property (nonatomic, strong) UIView *appoitBgVeiw;
// 主刀医生按钮背景
@property (nonatomic, strong) UIView *operationBgView;
// 会诊服务按钮
@property (nonatomic, strong) UIView *consulationBgView;
// 病情分析
@property (nonatomic, strong) UIView *illnessBgView;
// 离院跟踪按钮背景
@property (nonatomic, strong) UIView *leaveTrackBgView;

// 开通服务显示提示
// 预约专家按钮背景
@property (nonatomic, strong) UILabel *appoitLabel;
// 主刀医生按钮背景
@property (nonatomic, strong) UILabel *operationLabel;
// 会诊服务按钮
@property (nonatomic, strong) UILabel *consulationLabel;
// 病情分析
@property (nonatomic, strong) UILabel *illnessLabel;
// 离院跟踪按钮背景
@property (nonatomic, strong) UILabel *leaveTrackLabel;


// 经济模式下的服务价格数组
@property (nonatomic, strong) NSArray *servicePriceArray;

// 关注
@property (nonatomic, strong) UIButton *attentionButton;
@property (nonatomic, strong) UILabel *attentionLabel;




@end

@implementation DoctorDetail2Vc

- (void)viewDidLoad {
    [super viewDidLoad];
    
    // 重写导航栏按钮
    self.navigationItem.leftBarButtonItem = [UIBarButtonItem itemWithTitle:@"返回" imageName:@"NavBack" target:self action:@selector(leftBtnClicke)];
    
    // 1.界面布局
    [self setupUI];
    
    // 2.加载网络请求
    [self loadHttpRequest];
    
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    // 请求医生各项服务的价格
    if (ROLESTYLE) {
        NSString *urlStr = [NSString stringWithFormat:@"%@/uc/offer/offer_doctor_detail",BASEURL];
        
        NSMutableDictionary *params = [NSMutableDictionary dictionary];
        [params setObject:myAccount.token forKey:@"token"];
        [params setObject:_doctorID forKey:@"doctor_id"];
        
        ZZLog(@"%@",params);
        
        [ZZHTTPTool post:urlStr params:params success:^(id responseObj) {
            ZZLog(@"%@",responseObj);
            
            NSDictionary *dict = responseObj[@"result"];
            if ([responseObj[@"code"] isEqualToString:@"0000"]) {
                _servicePriceArray = [ServicePrice mj_objectArrayWithKeyValuesArray:dict[@"services"]];
                
                // 设置价格
                [self setServiceOptionBgView];
            }
            
        } failure:^(NSError *error) {
            
        }];
    }
    
}

- (void)leftBtnClicke {
    
    [self.navigationController popToRootViewControllerAnimated:YES];
    
}

- (void)setupUI {
    self.title = @"医生详情";
    self.view.backgroundColor = ZZBackgroundColor;
    
    // 1.0 滚动视图
    self.scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
    [self.view addSubview:self.scrollView];
    
    // 1.1 背景
    UIImageView *imgView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"doctor_detail_bg"]];
    imgView.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT*0.3);
    imgView.userInteractionEnabled = YES;
    [self.scrollView addSubview:imgView];
    
    CGFloat iconR = imgView.bounds.size.height*0.2;
    CGFloat iconX = SCREEN_WIDTH/2-iconR;
    
    // 1.2 分割线
    [ZZUITool lineVerticalWithPosition:CGPointMake(SCREEN_WIDTH/2, CGRectGetMaxY(imgView.frame) -ZZMarins*1.7) height:ZZMarins backGroundColor:ZZBaseColor superView:imgView];
    
    // 1.3 医院名称
    UIButton *lblHospital = [UIButton buttonWithType:UIButtonTypeCustom];
    lblHospital.frame = CGRectMake(0, CGRectGetMaxY(imgView.frame) -ZZMarins*1.7,  SCREEN_WIDTH/2-ZZMarins, ZZMarins);
    lblHospital.contentHorizontalAlignment = UIControlContentHorizontalAlignmentRight;
    [lblHospital setTitleColor:ZZBaseColor forState:UIControlStateNormal];
    [lblHospital addTarget:self action:@selector(hospitalButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    [imgView addSubview:lblHospital];
    self.hospitalButton = lblHospital;
    
    // 1.4 科室名称
    UILabel *lblDepart = [[UILabel alloc] initWithFrame:CGRectMake(SCREEN_WIDTH/2 +ZZMarins, CGRectGetMaxY(imgView.frame) -ZZMarins*1.7, SCREEN_WIDTH/2-ZZMarins, ZZMarins)];
    lblDepart.textAlignment = NSTextAlignmentLeft;
    lblDepart.textColor = ZZBaseColor;
    [imgView addSubview:lblDepart];
    self.lblDepart = lblDepart;
    
    // 1.5 医生头像
    UIImageView *iconView = [[UIImageView alloc] initWithFrame:CGRectMake(iconX, imgView.frame.size.height/2 -iconR *1.3, iconR*2, iconR*2)];
    iconView.layer.cornerRadius = iconR;
    iconView.layer.masksToBounds = YES;
    [imgView addSubview:iconView];
    self.iconView = iconView;
    
    // 1.6 关注Button
    UIButton *attentionButton = [UIButton buttonWithType:UIButtonTypeCustom];
    attentionButton.frame = CGRectMake(CGRectGetMaxX(self.iconView.frame) + iconR*0.5, CGRectGetMaxY(self.iconView.frame) - iconR * 1.8, iconR*0.8, iconR*0.8);
    [attentionButton setImage:[UIImage imageNamed:@"doctorDetail-07"] forState:UIControlStateNormal];
    [attentionButton addTarget:self action:@selector(btnClicked) forControlEvents:UIControlEventTouchUpInside];
    
    [imgView addSubview:attentionButton];
    self.attentionButton = attentionButton;
    
    // 1.7 关注Label
    UILabel *attentionLabel = [[UILabel alloc] initWithFrame:CGRectMake(CGRectGetMaxX(self.attentionButton.frame) - CGRectGetWidth(self.attentionButton.frame), CGRectGetMaxY(self.attentionButton.frame), 60, 30)];
    attentionLabel.text = @"关注";
    attentionLabel.textColor = [UIColor whiteColor];
    [imgView addSubview:attentionLabel];
    self.attentionLabel = attentionLabel;
    
    // 1.8 医生姓名
    UILabel *lblName = [[UILabel alloc] initWithFrame:CGRectMake(0, CGRectGetMinY(self.lblDepart.frame) -ZZMarins *1.7, SCREEN_WIDTH, ZZMarins)];
    lblName.textAlignment = NSTextAlignmentCenter;
    [imgView addSubview:lblName];
    self.lblName = lblName;
    
    [self  addAllButtons];
    
    // 2.1分割线
    UIView *line1 = [[UIView alloc] initWithFrame:CGRectMake(0, CGRectGetMaxY(self.bgView.frame), SCREEN_WIDTH/3*2, 1)];
    line1.backgroundColor = ZZColor(220, 220, 223, 1);
    [self.scrollView addSubview:line1];
    
    // 2.2 擅长
    UILabel *lblGood = [[UILabel alloc] init];
    lblGood.frame = CGRectMake(10, CGRectGetMaxY(line1.frame)+5, SCREEN_WIDTH-20, 30);
    lblGood.font = [UIFont systemFontOfSize:17];
    lblGood.text = @"擅长";
    [self.scrollView addSubview:lblGood];
    
    self.textViewY1 = CGRectGetMaxY(lblGood.frame)+5;
    
    // 2.3 医生擅长
    UITextView *txView1 = [[UITextView alloc] initWithFrame:CGRectMake(0, self.textViewY1, SCREEN_WIDTH, 30)];
    
    txView1.scrollEnabled = NO;
    txView1.font = [UIFont systemFontOfSize:13];
    txView1.editable = NO;
    txView1.layer.masksToBounds = YES;
    txView1.layer.borderColor = [UIColor darkGrayColor].CGColor;
    txView1.layer.borderColor = ZZColor(220, 220, 223, 1).CGColor;
    txView1.layer.borderWidth = 1.0;
    [self.scrollView addSubview:txView1];
    
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(txViewGoodAtSetFrame)];
    [txView1 addGestureRecognizer:tapGesture];
    
    self.txViewGoodAt = txView1;
    
    // 3.1 添加 Laabel介绍
    [self addDescLabel];
    
    self.textViewY2 = CGRectGetMaxY(self.lblDetail.frame)+5;
    
    // 3.2医生介绍
    [self addDetailTextVeiw];
    
    // 4.添加 重置frame的view
    [self addSetFrameView];
}

#pragma mark - 医院名称按钮事件
- (void)hospitalButtonAction:(UIButton *)sender {
    
    HosDetailViewController *hospitalDetailVC = [HosDetailViewController new];
    hospitalDetailVC.title = _doctorInfo.hospital_name;
    hospitalDetailVC.hospital_id = _doctorInfo.hospital_id;
    [self.navigationController pushViewController:hospitalDetailVC animated:YES];
}

#pragma mark - 添加全部的功能按钮
- (void)addAllButtons {
    
    CGFloat littleBtnX = 0;
    CGFloat littleBtnY = 5;
    CGFloat littleBtnW = SCREEN_WIDTH/3;// 小按钮的宽度
    CGFloat littleBtnH = 80;// 小按钮的高度
    CGFloat padding = ZZMarins;
    
    
    // 0.背景View
    UIView *bgView =[ZZUITool viewWithframe:CGRectMake(0, SCREEN_HEIGHT *0.3, SCREEN_WIDTH, littleBtnH *2 + 3*padding) backGroundColor:[UIColor whiteColor] superView:self.scrollView];
    bgView.backgroundColor = [UIColor whiteColor];
    self.bgView = bgView;
    
    CGFloat bgViewH = bgView.frame.size.height;
    
    // 1."预约专家"背景
    CGRect bgrect1 = CGRectMake(littleBtnX, 0, littleBtnW, bgViewH/2);
    UIView *btnView1 = [ZZUITool viewWithframe:bgrect1 backGroundColor:ZZColor(230, 230, 230, 1) superView:bgView];
    self.appoitBgVeiw = btnView1;
    [bgView addSubview:btnView1];
    
    // 1.1"预约专家" 按钮
    CGRect rect1 = CGRectMake(littleBtnX, littleBtnY, littleBtnW, littleBtnH);
    ZZActionBtn *btn1 = [ZZActionBtn actionBtnWithFrame:rect1 Title:@"预约专家" ImageName:@"doctorDetail-01" HighlightImageName:@"doctorDetail-01" Target:self action:@selector(functionBtnClicked:)];
    btn1.tag = 1;
    [bgView addSubview:btn1];
    
    // 添加长按手势
    UILongPressGestureRecognizer *longPress1 = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(btnLong1:)];
    longPress1.minimumPressDuration = 0.5;
    [btn1 addGestureRecognizer:longPress1];
    
    // 1.2"预约专家"Label
    UILabel *label1 = [[UILabel alloc] addLabelWithFrame:CGRectMake(littleBtnX, CGRectGetMaxY(btn1.frame), littleBtnW, 30) text:@"没有开通" textAligment:NSTextAlignmentCenter];
    self.appoitLabel = label1;
    [bgView addSubview:label1];
    
    
    // 2."主刀医生"背景
    CGRect bgrect2 = CGRectMake(littleBtnW, 0, littleBtnW, bgViewH/2);
    UIView *btnView2 = [ZZUITool viewWithframe:bgrect2 backGroundColor:ZZColor(230, 230, 230, 1) superView:bgView];
    self.operationBgView = btnView2;
    [bgView addSubview:btnView2];
    
    // 2.1"主刀医生服务" 按钮
    CGRect rect2 = CGRectMake(littleBtnW, littleBtnY, littleBtnW, littleBtnH);
    ZZActionBtn *btn2 = [ZZActionBtn actionBtnWithFrame:rect2 Title:@"主刀医生服务" ImageName:@"doctorDetail-05" HighlightImageName:@"doctorDetail-05" Target:self action:@selector(functionBtnClicked:)];
    btn2.tag = 2;
    [bgView addSubview:btn2];
    
    // 添加长按手势
    UILongPressGestureRecognizer *longPress2 = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(btnLong2:)];
    longPress2.minimumPressDuration = 0.5;
    [btn1 addGestureRecognizer:longPress2];
    
    // 2.2"主刀医生"Label
    UILabel *label2 = [[UILabel alloc] addLabelWithFrame:CGRectMake(littleBtnW, CGRectGetMaxY(btn1.frame), littleBtnW, 30) text:@"没有开通" textAligment:NSTextAlignmentCenter];
    self.operationLabel = label2;
    [bgView addSubview:label2];
    
    
    // 3."会诊服务"背景
    CGRect bgrect3 = CGRectMake(2 * littleBtnW, 0, littleBtnW, bgViewH/2);
    UIView *btnView3 = [ZZUITool viewWithframe:bgrect3 backGroundColor:ZZColor(230, 230, 230, 1) superView:bgView];
    self.consulationBgView = btnView3;
    [bgView addSubview:btnView3];
    
    // 3.1"会诊服务" 按钮
    CGRect rect3 = CGRectMake(2*littleBtnW, littleBtnY, littleBtnW, littleBtnH);
    ZZActionBtn *btn3 = [ZZActionBtn actionBtnWithFrame:rect3 Title:@"会诊服务" ImageName:@"doctorDetail-02" HighlightImageName:@"doctorDetail-02" Target:self action:@selector(functionBtnClicked:)];
    btn3.tag = 3;
    [bgView addSubview:btn3];
    
    // 添加长按手势
    UILongPressGestureRecognizer *longPress3 = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(btnLong3:)];
    longPress3.minimumPressDuration = 0.5;
    [btn1 addGestureRecognizer:longPress3];
    
    // 3.2"会诊服务"Label
    UILabel *label3 = [[UILabel alloc] addLabelWithFrame:CGRectMake(2*littleBtnW, CGRectGetMaxY(btn1.frame), littleBtnW, 30) text:@"没有开通" textAligment:NSTextAlignmentCenter];
    self.consulationLabel = label3;
    [bgView addSubview:label3];
    
    
    // 4."病情分析"背景
    CGRect bgrect4 = CGRectMake(littleBtnX, bgViewH/2, littleBtnW, bgViewH/2);
    UIView *btnView4 = [ZZUITool viewWithframe:bgrect4 backGroundColor:ZZColor(230, 230, 230, 1) superView:bgView];
    self.illnessBgView = btnView4;
    [bgView addSubview:btnView4];
    
    // 4.1"病情分析会" 按钮
    CGRect rect4 = CGRectMake(0, littleBtnY*7 +littleBtnH, littleBtnW, littleBtnH);
    ZZActionBtn *btn4 = [ZZActionBtn actionBtnWithFrame:rect4 Title:@"病情分析会" ImageName:@"doctorDetail-04" HighlightImageName:@"doctorDetail-04" Target:self action:@selector(functionBtnClicked:)];
    btn4.tag = 4;
    [bgView addSubview:btn4];
    
    // 添加长按手势
    UILongPressGestureRecognizer *longPress4 = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(btnLong4:)];
    longPress4.minimumPressDuration = 0.5;
    [btn1 addGestureRecognizer:longPress4];
    
    // 4.2"病情分析"Label
    UILabel *label4 = [[UILabel alloc] addLabelWithFrame:CGRectMake(littleBtnX, CGRectGetMaxY(btn4.frame), littleBtnW, 30) text:@"没有开通" textAligment:NSTextAlignmentCenter];
    self.illnessLabel = label4;
    [bgView addSubview:label4];
    
    
    // 5."离院跟踪"背景
    CGRect bgrect5 = CGRectMake(littleBtnW, bgViewH/2, littleBtnW, bgViewH/2);
    UIView *btnView5 = [ZZUITool viewWithframe:bgrect5 backGroundColor:ZZColor(230, 230, 230, 1) superView:bgView];
    self.leaveTrackBgView = btnView5;
    [bgView addSubview:btnView5];
    
    // 5."离院跟踪服务" 按钮
    CGRect rect5 = CGRectMake(littleBtnW, littleBtnY*7 +littleBtnH, littleBtnW, littleBtnH);
    ZZActionBtn *btn5 = [ZZActionBtn actionBtnWithFrame:rect5 Title:@"离院跟踪服务" ImageName:@"doctorDetail-06" HighlightImageName:@"doctorDetail-06" Target:self action:@selector(functionBtnClicked:)];
    btn5.tag = 5;
    [bgView addSubview:btn5];
    
    // 添加长按手势
    UILongPressGestureRecognizer *longPress5 = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(btnLong5:)];
    longPress5.minimumPressDuration = 0.5;
    [btn1 addGestureRecognizer:longPress5];
    
    UILabel *label5 = [[UILabel alloc] addLabelWithFrame:CGRectMake(littleBtnW, CGRectGetMaxY(btn4.frame), littleBtnW, 30) text:@"没有开通" textAligment:NSTextAlignmentCenter];
    self.leaveTrackLabel = label5;
    [bgView addSubview:label5];
    
    
    // 6.阴影
    [ZZUITool viewWithframe:CGRectMake(2*littleBtnW, bgViewH/2, littleBtnW, bgViewH/2) backGroundColor:ZZBackgroundColor superView:bgView];
    
    // 7.分割线
    [ZZUITool linehorizontalWithPosition:CGPointMake(0, bgViewH/2) width:littleBtnW*2 backGroundColor:ZZBackgroundColor superView:bgView];
    
    [ZZUITool lineVerticalWithPosition:CGPointMake(littleBtnW, 0) height:bgViewH backGroundColor:ZZBackgroundColor superView:bgView];
    
    [ZZUITool lineVerticalWithPosition:CGPointMake(littleBtnW *2, 0) height:bgViewH backGroundColor:ZZBackgroundColor superView:bgView];
}

#pragma mark - 收藏按钮网络请求
- (void)btnClicked {

        // 1. 准备请求网址
        NSString *urlStr = [NSString stringWithFormat:@"%@/uc/favorite/create",BASEURL];
        
        // 2. 创建请求体
        NSMutableDictionary *params = [NSMutableDictionary dictionary];
        
        [params setObject:myAccount.token forKey:@"token"]; // 登陆标记
        [params setObject:@2 forKey:@"obj_type"]; // 收藏类型 1.医院 2.医生
        [params setObject:_doctorInfo.doctor_id forKey:@"obj_id"]; // 收藏对象ID
        
        __weak typeof(self)weakSelf = self;
        [ZZHTTPTool post:urlStr params:params success:^(id responseObj) {
            ZZLog(@"---responseObj = %@",responseObj);
            
            if ([responseObj[@"message"] isEqualToString:@"该医生你已经收藏过了！"]) {
                // 取消收藏
                [weakSelf cancleAttention];
            }
            if ([responseObj[@"code"] isEqualToString:@"0000"]) {
                [self.attentionButton setImage:[UIImage imageNamed:@"doctorDetail_favorise_select"] forState:UIControlStateNormal];
                [MBProgressHUD showSuccess:@"收藏成功" toView:weakSelf.view];
            }
            
        } failure:^(NSError *error) {
            ZZLog(@"--error = %@",error);
            // 隐藏遮盖
            [MBProgressHUD hideHUDForView:weakSelf.view animated:YES];
            [MBProgressHUD showError:@"发生错误，请重试" toView:weakSelf.view];
        }];
    
}

#pragma mark - 取消收藏
- (void)cancleAttention {
    
    // 1. 准备网址
    NSString *urlStr = [NSString stringWithFormat:@"%@/uc/favorite/cancel",BASEURL];
    
    // 2. 创建请求体
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    
    [params setObject:myAccount.token forKey:@"token"];
    [params setObject:@2 forKey:@"obj_type"];
    [params setObject:_doctorInfo.doctor_id forKey:@"obj_id"];
    
    __weak typeof(self)weakSelf = self;
    [ZZHTTPTool post:urlStr params:params success:^(id responseObj) {
        ZZLog(@"---responseObj = %@",responseObj);
        if ([responseObj[@"code"] isEqualToString:@"0000"]) {
            ZZLog(@"取消收藏");
            [self.attentionButton setImage:[UIImage imageNamed:@"doctorDetail-07"] forState:UIControlStateNormal];
            [MBProgressHUD showSuccess:@"取消收藏" toView:weakSelf.view];
        }
        
    } failure:^(NSError *error) {
        ZZLog(@"--error = %@",error);
        // 隐藏遮盖
        [MBProgressHUD hideHUDForView:weakSelf.view animated:YES];
        [MBProgressHUD showError:@"发生错误，请重试" toView:weakSelf.view];
    }];
}

#pragma mark -  监听 功能按钮 点击
- (void)functionBtnClicked:(UIButton *)btn {
    ZZLog(@"---0908070605040302010---");
    
    if (ROLESTYLE) { // 经纪人
        
        SettingDocPriceVc *setDocPriceVC = [[SettingDocPriceVc alloc] init];
        // 判断点击的是哪一个button，和医生提供的服务
        if (btn.tag == 1) {
            setDocPriceVC.typeNum = @"1";
            for (ServicePrice *servicePrice in _servicePriceArray) {
                if ([servicePrice.service_type isEqualToString:@"1"]) {
                    setDocPriceVC.price1 = servicePrice.price;
                    setDocPriceVC.price2 = servicePrice.attach_price;
                }
            }
        }
        else if (btn.tag == 2) {
            setDocPriceVC.typeNum = @"2";
            for (ServicePrice *servicePrice in _servicePriceArray) {
                if ([servicePrice.service_type isEqualToString:@"2"]) {
                    setDocPriceVC.price1 = servicePrice.price;
                    setDocPriceVC.price2 = servicePrice.attach_price;
                }
            }
        }
        else if (btn.tag == 3) {
            setDocPriceVC.typeNum = @"3";
            for (ServicePrice *servicePrice in _servicePriceArray) {
                if ([servicePrice.service_type isEqualToString:@"3"]) {
                    setDocPriceVC.price1 = servicePrice.price;
                    setDocPriceVC.price2 = servicePrice.attach_price;
                }
            }
        }
        else if (btn.tag == 4) {
            setDocPriceVC.typeNum = @"4";
            for (ServicePrice *servicePrice in _servicePriceArray) {
                if ([servicePrice.service_type isEqualToString:@"1"]) {
                    setDocPriceVC.price1 = servicePrice.price;
                }
            }
        }
        else {
            setDocPriceVC.typeNum = @"5";
            for (ServicePrice *servicePrice in _servicePriceArray) {
                if ([servicePrice.service_type isEqualToString:@"1"]) {
                    setDocPriceVC.price1 = servicePrice.price;
                }
            }
        }
        
        [self.navigationController pushViewController:setDocPriceVC animated:YES];
    }
    else {  // 普通用户
        // 判断点击的是哪一个button，和医生提供的服务
        if (btn.tag == 1) {
            for (Service *service in _doctorInfo.services) {
                if ([service.service_type isEqualToString:@"1"]) {
                    
                    switch ([service.open_flag integerValue]) {
                        case 0: {
                            [MBProgressHUD showError:@"该医生没有开通此服务"];
                            [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                        }
                            break;
                        case 1: {
                            GuaHaoController *guahaoVC = [GuaHaoController new];
                            guahaoVC.orderType = @"1";
                            guahaoVC.title = @"预约专家";
                            [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                            [self.navigationController pushViewController:guahaoVC animated:YES];
                        }
                            break;
                        case 3:
                            // 添加提示窗口
                            [self addTipAlertView];
                            break;
                            
                        default:
                            break;
                    }
                    
                }
                
            }
            
        }
        else if (btn.tag == 2) {
            for (Service *service in _doctorInfo.services) {
                if ([service.service_type isEqualToString:@"2"]) {
                    
                    switch ([service.open_flag integerValue]) {
                        case 0: {
                            [MBProgressHUD showError:@"该医生没有开通此服务"];
                            [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                        }
                            break;
                        case 1: {
                            OperationTableViewController *operationTVC = [OperationTableViewController new];
                            operationTVC.orderType = @"2";
                            operationTVC.title = @"主刀医生服务";
                            [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                            [self.navigationController pushViewController:operationTVC animated:YES];
                        }
                            break;
                            
                        default:
                            break;
                    }
                    
                }
                
            }
            
        }
        else if (btn.tag == 3) {
            for (Service *service in _doctorInfo.services) {
                if ([service.service_type isEqualToString:@"3"]) {
                    
                    switch ([service.open_flag integerValue]) {
                        case 0: {
                            [MBProgressHUD showError:@"该医生没有开通此服务"];
                            [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                        }
                            break;
                        case 1: {
                            ConsultationTableViewController *consultationTVC = [ConsultationTableViewController new];
                            consultationTVC.orderType = @"3";
                            consultationTVC.title = @"会诊服务";
                            [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                            [self.navigationController pushViewController:consultationTVC animated:YES];
                        }
                            break;
                            
                        default:
                            break;
                    }
                    
                }
                
            }
        }
        else if (btn.tag == 4) {
            for (Service *service in _doctorInfo.services) {
                if ([service.service_type isEqualToString:@"4"]) {
                    
                    switch ([service.open_flag integerValue]) {
                        case 0: {
                            [MBProgressHUD showError:@"该医生没有开通此服务"];
                            [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                        }
                            break;
                        case 1: {
                            IllnessAnalyzeTableViewController *illnessTVC = [IllnessAnalyzeTableViewController new];
                            illnessTVC.orderType = @"4";
                            illnessTVC.title = @"病情分析会";
                            [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                            [self.navigationController pushViewController:illnessTVC animated:YES];
                        }
                            break;
                            
                        default:
                            break;
                    }
                    
                }
                
            }
        }
        else {
            for (Service *service in _doctorInfo.services) {
                if ([service.service_type isEqualToString:@"5"]) {
                    
                    switch ([service.open_flag integerValue]) {
                        case 0: {
                            [MBProgressHUD showError:@"该医生没有开通此服务"];
                            [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                        }
                            break;
                        case 1: {
                            LeaveTrackTableViewController *leaveTrackTVC = [LeaveTrackTableViewController new];
                            leaveTrackTVC.orderType = @"5";
                            leaveTrackTVC.title = @"离院跟踪服务";
                            [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                            [self.navigationController pushViewController:leaveTrackTVC animated:YES];
                        }
                            break;
                            
                        default:
                            break;
                    }
                    
                }
                
            }
        }
    }
    
}

- (void)tipAlertView {
    [MBProgressHUD hideHUD];
}

-(void)btnLong1:(UILongPressGestureRecognizer *)gestureRecognizer{
      if ([gestureRecognizer state] == UIGestureRecognizerStateBegan) {
                 NSLog(@"长按事件");
                 UIAlertView *alert=[[UIAlertView alloc] initWithTitle:@"消息" message:@"确定删除该模式吗？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"删除", nil];
                 [alert show];
    }
}

-(void)btnLong2:(UILongPressGestureRecognizer *)gestureRecognizer{
    if ([gestureRecognizer state] == UIGestureRecognizerStateBegan) {
        NSLog(@"长按事件");
        UIAlertView *alert=[[UIAlertView alloc] initWithTitle:@"消息" message:@"确定删除该模式吗？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"删除", nil];
        [alert show];
    }
}
-(void)btnLong3:(UILongPressGestureRecognizer *)gestureRecognizer{
    if ([gestureRecognizer state] == UIGestureRecognizerStateBegan) {
        NSLog(@"长按事件");
        UIAlertView *alert=[[UIAlertView alloc] initWithTitle:@"消息" message:@"确定删除该模式吗？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"删除", nil];
        [alert show];
    }
}
-(void)btnLong4:(UILongPressGestureRecognizer *)gestureRecognizer{
    if ([gestureRecognizer state] == UIGestureRecognizerStateBegan) {
        NSLog(@"长按事件");
        UIAlertView *alert=[[UIAlertView alloc] initWithTitle:@"消息" message:@"确定删除该模式吗？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"删除", nil];
        [alert show];
    }
}
-(void)btnLong5:(UILongPressGestureRecognizer *)gestureRecognizer{
    if ([gestureRecognizer state] == UIGestureRecognizerStateBegan) {
        NSLog(@"长按事件");
        UIAlertView *alert=[[UIAlertView alloc] initWithTitle:@"消息" message:@"确定删除该模式吗？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"删除", nil];
        [alert show];
    }
}
#pragma mark - 长按button删除服务
- (void)longPressAction:(UIGestureRecognizer *)gestureRec
                 button:(UIButton *)btn {
    
    // 判断点击的是哪一个button，和医生提供的服务
    if (btn.tag == 1) {
        for (Service *service in _doctorInfo.services) {
            if ([service.service_type isEqualToString:@"1"]) {
                
                switch ([service.open_flag integerValue]) {
                    case 0: {
                        [MBProgressHUD showError:@"没有开通该服务"];
                        [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                    }
                        break;
                    case 1: {
                        GuaHaoController *guahaoVC = [GuaHaoController new];
                        guahaoVC.orderType = @"1";
                        guahaoVC.title = @"预约专家";
                        [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                        [self.navigationController pushViewController:guahaoVC animated:YES];
                    }
                        break;
                        
                    default:
                        break;
                }
                
            }
            
        }
        
    }
    else if (btn.tag == 2) {
        for (Service *service in _doctorInfo.services) {
            if ([service.service_type isEqualToString:@"2"]) {
                
                switch ([service.open_flag integerValue]) {
                    case 0: {
                        [MBProgressHUD showError:@"没有开通该服务"];
                        [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                    }
                        break;
                    case 1: {
                        OperationTableViewController *operationTVC = [OperationTableViewController new];
                        operationTVC.orderType = @"2";
                        operationTVC.title = @"主刀医生服务";
                        [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                        [self.navigationController pushViewController:operationTVC animated:YES];
                    }
                        break;
                        
                    default:
                        break;
                }
                
            }
            
        }
        
    }
    else if (btn.tag == 3) {
        for (Service *service in _doctorInfo.services) {
            if ([service.service_type isEqualToString:@"3"]) {
                
                switch ([service.open_flag integerValue]) {
                    case 0: {
                        [MBProgressHUD showError:@"没有开通该服务"];
                        [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                    }
                        break;
                    case 1: {
                        ConsultationTableViewController *consultationTVC = [ConsultationTableViewController new];
                        consultationTVC.orderType = @"3";
                        consultationTVC.title = @"会诊服务";
                        [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                        [self.navigationController pushViewController:consultationTVC animated:YES];
                    }
                        break;
                        
                    default:
                        break;
                }
                
            }
            
        }
    }
    else if (btn.tag == 4) {
        for (Service *service in _doctorInfo.services) {
            if ([service.service_type isEqualToString:@"4"]) {
                
                switch ([service.open_flag integerValue]) {
                    case 0: {
                        [MBProgressHUD showError:@"没有开通该服务"];
                        [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                    }
                        break;
                    case 1: {
                        IllnessAnalyzeTableViewController *illnessTVC = [IllnessAnalyzeTableViewController new];
                        illnessTVC.orderType = @"4";
                        illnessTVC.title = @"病情分析会";
                        [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                        [self.navigationController pushViewController:illnessTVC animated:YES];
                    }
                        break;
                        
                    default:
                        break;
                }
                
            }
            
        }
    }
    else {
        for (Service *service in _doctorInfo.services) {
            if ([service.service_type isEqualToString:@"5"]) {
                
                switch ([service.open_flag integerValue]) {
                    case 0: {
                        [MBProgressHUD showError:@"没有开通该服务"];
                        [NSTimer timerWithTimeInterval:1.0f target:self selector:@selector(tipAlertView) userInfo:nil repeats:NO];
                    }
                        break;
                    case 1: {
                        LeaveTrackTableViewController *leaveTrackTVC = [LeaveTrackTableViewController new];
                        leaveTrackTVC.orderType = @"5";
                        leaveTrackTVC.title = @"离院跟踪服务";
                        [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
                        [self.navigationController pushViewController:leaveTrackTVC animated:YES];
                    }
                        break;
                        
                    default:
                        break;
                }
                
            }
            
        }
    }


}

#pragma mark - 当医生预约专家服务有优质服务的时候给出提示
- (void)addTipAlertView {
    
    GuaHaoController *guahaoVC = [GuaHaoController new];
    guahaoVC.orderType = @"1";
    guahaoVC.title = @"预约专家";
    [OrderInfo shareInstance].doctor_name = _doctorInfo.name;
    
    UIAlertController *alertView = [UIAlertController alertControllerWithTitle:@"提示" message:@"是否提供15分钟的优质服务" preferredStyle:UIAlertControllerStyleAlert];
    
    UIAlertAction *okAction = [UIAlertAction actionWithTitle:@"是" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        
        [OrderInfo shareInstance].assure_flag = YES;
        [self.navigationController pushViewController:guahaoVC animated:YES];
        
    }];
    
    UIAlertAction *cancleAction = [UIAlertAction actionWithTitle:@"否" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {

        [OrderInfo shareInstance].assure_flag = NO;
        [self.navigationController pushViewController:guahaoVC animated:YES];
        
    }];
    
    [alertView addAction:okAction];
    [alertView addAction:cancleAction];
    
    [self presentViewController:alertView animated:YES completion:nil];
    
}

#pragma mark - 添加 介绍 Label
- (void)addDescLabel {
    UILabel *lblDetail = [[UILabel alloc] init];
    lblDetail.frame = CGRectMake(10, CGRectGetMaxY(self.txViewGoodAt.frame)+5, SCREEN_WIDTH-20, 30);
    lblDetail.font = [UIFont systemFontOfSize:17];
    lblDetail.text = @"介绍";
    [self.scrollView addSubview:lblDetail];
    self.lblDetail = lblDetail;
}

#pragma mark - 添加 医生介绍 textVeiw
- (void)addDetailTextVeiw {
    [self loadHttpRequest];
    
    UITextView *txView2 = [[UITextView alloc] initWithFrame:CGRectMake(0, CGRectGetMaxY(self.lblDetail.frame)+5, SCREEN_WIDTH, 60)];
    
    txView2.scrollEnabled = NO;
    txView2.font = [UIFont systemFontOfSize:13];
    txView2.editable = NO;
    txView2.layer.masksToBounds = YES;
    txView2.layer.borderColor = [UIColor darkGrayColor].CGColor;
    txView2.layer.borderColor = ZZColor(220, 220, 223, 1).CGColor;
    txView2.layer.borderWidth = 1.0;
    [self.scrollView addSubview:txView2];
    
    UITapGestureRecognizer *tapGesture2 = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(txViewDetailSetFrame)];
    [txView2 addGestureRecognizer:tapGesture2];
    
    self.txViewDetail = txView2;
}

#pragma mark - 添加 重置frame的view
- (void)addSetFrameView {
    UIView *setFrameView = [UIButton buttonWithType:UIButtonTypeCustom];
    setFrameView.frame = CGRectMake(0, CGRectGetMaxY(self.txViewDetail.frame), SCREEN_WIDTH, ZZMarins/4);
    setFrameView.backgroundColor = ZZBackgroundColor;
    [self.scrollView addSubview:setFrameView];
    
    self.scrollView.contentSize = CGSizeMake(1, CGRectGetMaxY(setFrameView.frame)+ZZMarins);
    self.setFrameView = setFrameView;
}

#pragma mark - 擅长 textView 点击缩放
- (void)txViewGoodAtSetFrame {
    // 1.点击缩放textView
    if (self.clickedNum %2 == 0) {
        self.txViewGoodAt.frame = CGRectMake(0, self.textViewY1, SCREEN_WIDTH, self.size1.height+10);
    }else {
        
        self.txViewGoodAt.frame = CGRectMake(0, self.textViewY1, SCREEN_WIDTH, 30);
    }
    // 2.重置Label 介绍
    [self.lblDetail removeFromSuperview];
    [self addDescLabel];
    
    // 3.重置txViewDetail
    [self.txViewDetail removeFromSuperview];
    [self addDetailTextVeiw];
    
    // 4.重置选择按钮
    [self.setFrameView removeFromSuperview];
    [self addSetFrameView];
    
    // 5.计数+1
    self.clickedNum ++;
}

#pragma mark - 医生介绍 textView 点击缩放
- (void)txViewDetailSetFrame {
    // 1.点击缩放textView
    if (self.clickedNum2 %2 == 0) {
        self.txViewDetail.frame = CGRectMake(0, CGRectGetMaxY(self.lblDetail.frame)+5, SCREEN_WIDTH, self.size2.height+10);
        
    }else {
        self.txViewDetail.frame = CGRectMake(0, CGRectGetMaxY(self.lblDetail.frame)+5, SCREEN_WIDTH, 60);
    }
    
    // 2.重置选择按钮
    [self.setFrameView removeFromSuperview];
    [self addSetFrameView];
    
    // 3.设置scrollView的滚动范围
    self.scrollView.contentSize = CGSizeMake(1, CGRectGetMaxY(self.setFrameView.frame));
    self.scrollView.contentInset = UIEdgeInsetsMake(64, 0, ZZMarins, 0);
    
    // 4.计数+1
    self.clickedNum2 ++;
}

#pragma mark - 加载医生详情信息
- (void)loadHttpRequest {
    NSString *urlStr = [[NSString alloc] init];
    NSMutableDictionary *params = [NSMutableDictionary dictionary];

    urlStr = [NSString stringWithFormat:@"%@/resource/doctor_detail",BASEURL];
    [params setObject:_doctorID forKey:@"doctor_id"];
    [params setObject:myAccount.token forKey:@"token"];

    __weak typeof(self) weakSelf = self;
    
    [ZZHTTPTool post:urlStr params:params success:^(NSDictionary *responseObj) {
        ZZLog(@"%@",responseObj);
        
        NSDictionary *dictResult = responseObj[@"result"];
        _doctorInfo = [DoctorInfo mj_objectWithKeyValues:dictResult];
        
        // 设置医生详情页面数据
        [weakSelf setDoctorInfoPageData];
        
        // 设置专家服务背景颜色
        [weakSelf setServiceOptionBgView];
        
        
    } failure:^(NSError *error) {
        ZZLog(@"%@",error);
    }];
}

#pragma mark - 设置医生详情页面数据
- (void)setDoctorInfoPageData {
#warning 收藏的标识没有更改
    // 设置关注Button图片
    if ([_doctorInfo.favorite_flag isEqualToString:@"1"]) {
        [self.attentionButton setImage:[UIImage imageNamed:@"doctorDetail_favorise_select"] forState:UIControlStateNormal];
    }
    // 1.设置医生头像
    [self.iconView sd_setImageWithURL:[NSURL URLWithString:_doctorInfo.avator] placeholderImage:[UIImage imageNamed:@"icon08"]];
    // 2.设置医生姓名
    self.lblName.text = _doctorInfo.name;
    // 3.设置科室名称
    self.lblDepart.text = _doctorInfo.department_name;
    // 4.设置医院名称
    [self.hospitalButton setTitle:_doctorInfo.hospital_name forState:UIControlStateNormal];
    // 5.设置医生擅长
    if ([_doctorInfo.good_at isEqual:[NSNull null]]) {// 无内容
        self.txViewGoodAt.text = nil;
    } else {
        self.txViewGoodAt.text = _doctorInfo.good_at;
    }
    
    // 5.1根据字体计算textView的高度
    if ([_doctorInfo.good_at isEqual:[NSNull null]]) {// 无内容
        self.size1 = CGSizeMake(SCREEN_WIDTH, 30);
    }else {
        self.size1 = [_doctorInfo.good_at boundingRectWithSize:CGSizeMake(SCREEN_WIDTH, CGFLOAT_MAX) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName : [UIFont systemFontOfSize:13]} context:nil].size;
    }
    
    // 6.设置医生介绍
    if ([_doctorInfo.memo isEqual:[NSNull null]]) {// 无内容
        self.txViewDetail.text = nil;
    } else {
        self.txViewDetail.text = _doctorInfo.memo;
    }
    
    // 6.1根据字体计算textView的高度
    if ([_doctorInfo.memo isEqual:[NSNull null]]) {// 无内容
        self.size2 = CGSizeMake(SCREEN_WIDTH, 30);
    } else {
        self.size2 = [_doctorInfo.memo boundingRectWithSize:CGSizeMake(SCREEN_WIDTH, CGFLOAT_MAX) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName : [UIFont systemFontOfSize:13]} context:nil].size;
    }
    
    [OrderInfo shareInstance].hospital_id = _doctorInfo.hospital_id;
    [OrderInfo shareInstance].department_id = _doctorInfo.department_id;
    [OrderInfo shareInstance].doctor_id = _doctorInfo.doctor_id;
    
}

#pragma mark - 设置专家服务按钮的背景颜色
- (void)setServiceOptionBgView {
    
    if (ROLESTYLE) {
        ZZLog(@"%@",_servicePriceArray);
        for (ServicePrice *servicePrice in _servicePriceArray) {
            if ([servicePrice.open_flag isEqualToString:@"1"]) {
                if ([servicePrice.service_type isEqualToString:@"1"]) {
                    self.appoitBgVeiw.hidden = YES;
                    self.appoitLabel.text = [NSString stringWithFormat:@"￥%@.00",servicePrice.price];
                    self.appoitLabel.textColor = [UIColor redColor];
                }
                else if ([servicePrice.service_type isEqualToString:@"2"]) {
                    self.operationBgView.hidden = YES;
                    self.operationLabel.text = [NSString stringWithFormat:@"￥%@.00",servicePrice.price];
                    self.operationLabel.textColor = [UIColor redColor];
                }
                else if ([servicePrice.service_type isEqualToString:@"3"]) {
                    self.consulationBgView.hidden = YES;
                    self.consulationLabel.text = [NSString stringWithFormat:@"￥%@.00",servicePrice.price];
                    self.consulationLabel.textColor = [UIColor redColor];
                }
                else if ([servicePrice.service_type isEqualToString:@"4"]) {
                    self.illnessBgView.hidden = YES;
                    self.illnessLabel.text = [NSString stringWithFormat:@"￥%@.00",servicePrice.price];
                    self.illnessLabel.textColor = [UIColor redColor];
                }
                else {
                    self.leaveTrackBgView.hidden = YES;
                    self.leaveTrackLabel.text = [NSString stringWithFormat:@"￥%@.00",servicePrice.price];
                    self.leaveTrackLabel.textColor = [UIColor redColor];
                }
            }
        }
    }
    else {
        for (Service *service in _doctorInfo.services) {
            if ([service.open_flag isEqualToString:@"1"] || [service.open_flag isEqualToString:@"3"]) {
                if ([service.service_type isEqualToString:@"1"]) {
                    self.appoitBgVeiw.hidden = YES;
                    self.appoitLabel.text = @"已开通";
                    self.appoitLabel.textColor = [UIColor redColor];
                }
                else if ([service.service_type isEqualToString:@"2"]) {
                    self.operationBgView.hidden = YES;
                    self.operationLabel.text = @"已开通";
                    self.operationLabel.textColor = [UIColor redColor];
                }
                else if ([service.service_type isEqualToString:@"3"]) {
                    self.consulationBgView.hidden = YES;
                    self.consulationLabel.text = @"已开通";
                    self.consulationLabel.textColor = [UIColor redColor];
                }
                else if ([service.service_type isEqualToString:@"4"]) {
                    self.illnessBgView.hidden = YES;
                    self.illnessLabel.text = @"已开通";
                    self.illnessLabel.textColor = [UIColor redColor];
                }
                else {
                    self.leaveTrackBgView.hidden = YES;
                    self.leaveTrackLabel.text = @"已开通";
                    self.leaveTrackLabel.textColor = [UIColor redColor];
                }
            }
        }
    }
    
}

@end
